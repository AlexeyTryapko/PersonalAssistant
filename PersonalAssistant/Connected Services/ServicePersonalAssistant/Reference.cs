//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PersonalAssistant.ServicePersonalAssistant {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericEntityOfUserwlbDdAhF", Namespace="http://schemas.datacontract.org/2004/07/CastleActiveRecord.Persistence")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PersonalAssistant.ServicePersonalAssistant.User))]
    public partial class GenericEntityOfUserwlbDdAhF : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/PersonalAssistantWCF.Entity")]
    [System.SerializableAttribute()]
    public partial class User : PersonalAssistant.ServicePersonalAssistant.GenericEntityOfUserwlbDdAhF {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mail {
            get {
                return this.MailField;
            }
            set {
                if ((object.ReferenceEquals(this.MailField, value) != true)) {
                    this.MailField = value;
                    this.RaisePropertyChanged("Mail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Note", Namespace="http://schemas.datacontract.org/2004/07/PersonalAssistantWCF.Entity")]
    [System.SerializableAttribute()]
    public partial class Note : PersonalAssistant.ServicePersonalAssistant.GenericEntityOfNotewlbDdAhF {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteMainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PersonalAssistant.ServicePersonalAssistant.User UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteMain {
            get {
                return this.NoteMainField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteMainField, value) != true)) {
                    this.NoteMainField = value;
                    this.RaisePropertyChanged("NoteMain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoteTitle {
            get {
                return this.NoteTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteTitleField, value) != true)) {
                    this.NoteTitleField = value;
                    this.RaisePropertyChanged("NoteTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PersonalAssistant.ServicePersonalAssistant.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericEntityOfNotewlbDdAhF", Namespace="http://schemas.datacontract.org/2004/07/CastleActiveRecord.Persistence")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PersonalAssistant.ServicePersonalAssistant.Note))]
    public partial class GenericEntityOfNotewlbDdAhF : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Meetup", Namespace="http://schemas.datacontract.org/2004/07/PersonalAssistantWCF.Entity")]
    [System.SerializableAttribute()]
    public partial class Meetup : PersonalAssistant.ServicePersonalAssistant.GenericEntityOfMeetupwlbDdAhF {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PersonalAssistant.ServicePersonalAssistant.User UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PersonalAssistant.ServicePersonalAssistant.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericEntityOfMeetupwlbDdAhF", Namespace="http://schemas.datacontract.org/2004/07/CastleActiveRecord.Persistence")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PersonalAssistant.ServicePersonalAssistant.Meetup))]
    public partial class GenericEntityOfMeetupwlbDdAhF : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contact", Namespace="http://schemas.datacontract.org/2004/07/PersonalAssistantWCF.Entity")]
    [System.SerializableAttribute()]
    public partial class Contact : PersonalAssistant.ServicePersonalAssistant.GenericEntityOfContactwlbDdAhF {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private PersonalAssistant.ServicePersonalAssistant.User UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PersonalAssistant.ServicePersonalAssistant.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericEntityOfContactwlbDdAhF", Namespace="http://schemas.datacontract.org/2004/07/CastleActiveRecord.Persistence")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(PersonalAssistant.ServicePersonalAssistant.Contact))]
    public partial class GenericEntityOfContactwlbDdAhF : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicePersonalAssistant.IServicePersonalAssistant", CallbackContract=typeof(PersonalAssistant.ServicePersonalAssistant.IServicePersonalAssistantCallback))]
    public interface IServicePersonalAssistant {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/Login", ReplyAction="http://tempuri.org/IServicePersonalAssistant/LoginResponse")]
        PersonalAssistant.ServicePersonalAssistant.User Login([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/Login", ReplyAction="http://tempuri.org/IServicePersonalAssistant/LoginResponse")]
        System.Threading.Tasks.Task<PersonalAssistant.ServicePersonalAssistant.User> LoginAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/Registration", ReplyAction="http://tempuri.org/IServicePersonalAssistant/RegistrationResponse")]
        PersonalAssistant.ServicePersonalAssistant.User Registration(string login, string password, string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/Registration", ReplyAction="http://tempuri.org/IServicePersonalAssistant/RegistrationResponse")]
        System.Threading.Tasks.Task<PersonalAssistant.ServicePersonalAssistant.User> RegistrationAsync(string login, string password, string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/Write", ReplyAction="http://tempuri.org/IServicePersonalAssistant/WriteResponse")]
        void Write(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/Write", ReplyAction="http://tempuri.org/IServicePersonalAssistant/WriteResponse")]
        System.Threading.Tasks.Task WriteAsync(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/InitializeActiveRecord", ReplyAction="http://tempuri.org/IServicePersonalAssistant/InitializeActiveRecordResponse")]
        void InitializeActiveRecord();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/InitializeActiveRecord", ReplyAction="http://tempuri.org/IServicePersonalAssistant/InitializeActiveRecordResponse")]
        System.Threading.Tasks.Task InitializeActiveRecordAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/RefreshNotes", ReplyAction="http://tempuri.org/IServicePersonalAssistant/RefreshNotesResponse")]
        PersonalAssistant.ServicePersonalAssistant.Note[] RefreshNotes(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/RefreshNotes", ReplyAction="http://tempuri.org/IServicePersonalAssistant/RefreshNotesResponse")]
        System.Threading.Tasks.Task<PersonalAssistant.ServicePersonalAssistant.Note[]> RefreshNotesAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/DeleteNote", ReplyAction="http://tempuri.org/IServicePersonalAssistant/DeleteNoteResponse")]
        void DeleteNote(PersonalAssistant.ServicePersonalAssistant.Note note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/DeleteNote", ReplyAction="http://tempuri.org/IServicePersonalAssistant/DeleteNoteResponse")]
        System.Threading.Tasks.Task DeleteNoteAsync(PersonalAssistant.ServicePersonalAssistant.Note note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/AddNote", ReplyAction="http://tempuri.org/IServicePersonalAssistant/AddNoteResponse")]
        PersonalAssistant.ServicePersonalAssistant.Note AddNote(string noteTitle, string noteMain, PersonalAssistant.ServicePersonalAssistant.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/AddNote", ReplyAction="http://tempuri.org/IServicePersonalAssistant/AddNoteResponse")]
        System.Threading.Tasks.Task<PersonalAssistant.ServicePersonalAssistant.Note> AddNoteAsync(string noteTitle, string noteMain, PersonalAssistant.ServicePersonalAssistant.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/RefreshMeetups", ReplyAction="http://tempuri.org/IServicePersonalAssistant/RefreshMeetupsResponse")]
        PersonalAssistant.ServicePersonalAssistant.Meetup[] RefreshMeetups(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/RefreshMeetups", ReplyAction="http://tempuri.org/IServicePersonalAssistant/RefreshMeetupsResponse")]
        System.Threading.Tasks.Task<PersonalAssistant.ServicePersonalAssistant.Meetup[]> RefreshMeetupsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/DeleteMeetup", ReplyAction="http://tempuri.org/IServicePersonalAssistant/DeleteMeetupResponse")]
        void DeleteMeetup(PersonalAssistant.ServicePersonalAssistant.Meetup meetup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/DeleteMeetup", ReplyAction="http://tempuri.org/IServicePersonalAssistant/DeleteMeetupResponse")]
        System.Threading.Tasks.Task DeleteMeetupAsync(PersonalAssistant.ServicePersonalAssistant.Meetup meetup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/AddMeetup", ReplyAction="http://tempuri.org/IServicePersonalAssistant/AddMeetupResponse")]
        PersonalAssistant.ServicePersonalAssistant.Meetup AddMeetup(string address, string description, PersonalAssistant.ServicePersonalAssistant.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/AddMeetup", ReplyAction="http://tempuri.org/IServicePersonalAssistant/AddMeetupResponse")]
        System.Threading.Tasks.Task<PersonalAssistant.ServicePersonalAssistant.Meetup> AddMeetupAsync(string address, string description, PersonalAssistant.ServicePersonalAssistant.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/RefreshContacts", ReplyAction="http://tempuri.org/IServicePersonalAssistant/RefreshContactsResponse")]
        PersonalAssistant.ServicePersonalAssistant.Contact[] RefreshContacts(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/RefreshContacts", ReplyAction="http://tempuri.org/IServicePersonalAssistant/RefreshContactsResponse")]
        System.Threading.Tasks.Task<PersonalAssistant.ServicePersonalAssistant.Contact[]> RefreshContactsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/DeleteContact", ReplyAction="http://tempuri.org/IServicePersonalAssistant/DeleteContactResponse")]
        void DeleteContact(PersonalAssistant.ServicePersonalAssistant.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/DeleteContact", ReplyAction="http://tempuri.org/IServicePersonalAssistant/DeleteContactResponse")]
        System.Threading.Tasks.Task DeleteContactAsync(PersonalAssistant.ServicePersonalAssistant.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/AddContact", ReplyAction="http://tempuri.org/IServicePersonalAssistant/AddContactResponse")]
        PersonalAssistant.ServicePersonalAssistant.Contact AddContact(string name, string email, PersonalAssistant.ServicePersonalAssistant.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/AddContact", ReplyAction="http://tempuri.org/IServicePersonalAssistant/AddContactResponse")]
        System.Threading.Tasks.Task<PersonalAssistant.ServicePersonalAssistant.Contact> AddContactAsync(string name, string email, PersonalAssistant.ServicePersonalAssistant.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/Export", ReplyAction="http://tempuri.org/IServicePersonalAssistant/ExportResponse")]
        void Export(string method, PersonalAssistant.ServicePersonalAssistant.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePersonalAssistant/Export", ReplyAction="http://tempuri.org/IServicePersonalAssistant/ExportResponse")]
        System.Threading.Tasks.Task ExportAsync(string method, PersonalAssistant.ServicePersonalAssistant.User user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicePersonalAssistantCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServicePersonalAssistant/MsgCallback")]
        void MsgCallback(string msg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicePersonalAssistantChannel : PersonalAssistant.ServicePersonalAssistant.IServicePersonalAssistant, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicePersonalAssistantClient : System.ServiceModel.DuplexClientBase<PersonalAssistant.ServicePersonalAssistant.IServicePersonalAssistant>, PersonalAssistant.ServicePersonalAssistant.IServicePersonalAssistant {
        
        public ServicePersonalAssistantClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServicePersonalAssistantClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServicePersonalAssistantClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePersonalAssistantClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePersonalAssistantClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public PersonalAssistant.ServicePersonalAssistant.User Login(string login1, string password) {
            return base.Channel.Login(login1, password);
        }
        
        public System.Threading.Tasks.Task<PersonalAssistant.ServicePersonalAssistant.User> LoginAsync(string login, string password) {
            return base.Channel.LoginAsync(login, password);
        }
        
        public PersonalAssistant.ServicePersonalAssistant.User Registration(string login, string password, string mail) {
            return base.Channel.Registration(login, password, mail);
        }
        
        public System.Threading.Tasks.Task<PersonalAssistant.ServicePersonalAssistant.User> RegistrationAsync(string login, string password, string mail) {
            return base.Channel.RegistrationAsync(login, password, mail);
        }
        
        public void Write(string text) {
            base.Channel.Write(text);
        }
        
        public System.Threading.Tasks.Task WriteAsync(string text) {
            return base.Channel.WriteAsync(text);
        }
        
        public void InitializeActiveRecord() {
            base.Channel.InitializeActiveRecord();
        }
        
        public System.Threading.Tasks.Task InitializeActiveRecordAsync() {
            return base.Channel.InitializeActiveRecordAsync();
        }
        
        public PersonalAssistant.ServicePersonalAssistant.Note[] RefreshNotes(int userId) {
            return base.Channel.RefreshNotes(userId);
        }
        
        public System.Threading.Tasks.Task<PersonalAssistant.ServicePersonalAssistant.Note[]> RefreshNotesAsync(int userId) {
            return base.Channel.RefreshNotesAsync(userId);
        }
        
        public void DeleteNote(PersonalAssistant.ServicePersonalAssistant.Note note) {
            base.Channel.DeleteNote(note);
        }
        
        public System.Threading.Tasks.Task DeleteNoteAsync(PersonalAssistant.ServicePersonalAssistant.Note note) {
            return base.Channel.DeleteNoteAsync(note);
        }
        
        public PersonalAssistant.ServicePersonalAssistant.Note AddNote(string noteTitle, string noteMain, PersonalAssistant.ServicePersonalAssistant.User user) {
            return base.Channel.AddNote(noteTitle, noteMain, user);
        }
        
        public System.Threading.Tasks.Task<PersonalAssistant.ServicePersonalAssistant.Note> AddNoteAsync(string noteTitle, string noteMain, PersonalAssistant.ServicePersonalAssistant.User user) {
            return base.Channel.AddNoteAsync(noteTitle, noteMain, user);
        }
        
        public PersonalAssistant.ServicePersonalAssistant.Meetup[] RefreshMeetups(int userId) {
            return base.Channel.RefreshMeetups(userId);
        }
        
        public System.Threading.Tasks.Task<PersonalAssistant.ServicePersonalAssistant.Meetup[]> RefreshMeetupsAsync(int userId) {
            return base.Channel.RefreshMeetupsAsync(userId);
        }
        
        public void DeleteMeetup(PersonalAssistant.ServicePersonalAssistant.Meetup meetup) {
            base.Channel.DeleteMeetup(meetup);
        }
        
        public System.Threading.Tasks.Task DeleteMeetupAsync(PersonalAssistant.ServicePersonalAssistant.Meetup meetup) {
            return base.Channel.DeleteMeetupAsync(meetup);
        }
        
        public PersonalAssistant.ServicePersonalAssistant.Meetup AddMeetup(string address, string description, PersonalAssistant.ServicePersonalAssistant.User user) {
            return base.Channel.AddMeetup(address, description, user);
        }
        
        public System.Threading.Tasks.Task<PersonalAssistant.ServicePersonalAssistant.Meetup> AddMeetupAsync(string address, string description, PersonalAssistant.ServicePersonalAssistant.User user) {
            return base.Channel.AddMeetupAsync(address, description, user);
        }
        
        public PersonalAssistant.ServicePersonalAssistant.Contact[] RefreshContacts(int userId) {
            return base.Channel.RefreshContacts(userId);
        }
        
        public System.Threading.Tasks.Task<PersonalAssistant.ServicePersonalAssistant.Contact[]> RefreshContactsAsync(int userId) {
            return base.Channel.RefreshContactsAsync(userId);
        }
        
        public void DeleteContact(PersonalAssistant.ServicePersonalAssistant.Contact contact) {
            base.Channel.DeleteContact(contact);
        }
        
        public System.Threading.Tasks.Task DeleteContactAsync(PersonalAssistant.ServicePersonalAssistant.Contact contact) {
            return base.Channel.DeleteContactAsync(contact);
        }
        
        public PersonalAssistant.ServicePersonalAssistant.Contact AddContact(string name, string email, PersonalAssistant.ServicePersonalAssistant.User user) {
            return base.Channel.AddContact(name, email, user);
        }
        
        public System.Threading.Tasks.Task<PersonalAssistant.ServicePersonalAssistant.Contact> AddContactAsync(string name, string email, PersonalAssistant.ServicePersonalAssistant.User user) {
            return base.Channel.AddContactAsync(name, email, user);
        }
        
        public void Export(string method, PersonalAssistant.ServicePersonalAssistant.User user) {
            base.Channel.Export(method, user);
        }
        
        public System.Threading.Tasks.Task ExportAsync(string method, PersonalAssistant.ServicePersonalAssistant.User user) {
            return base.Channel.ExportAsync(method, user);
        }
    }
}
